// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`heroe screen tests Should match the snapshot 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/heroes",
    ]
  }
>
  <Router
    history={
      Object {
        "action": "REPLACE",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "eki9g7",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "eki9g7",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <HeroScreen
      history={
        Object {
          "goBack": [MockFunction],
          "length": 3,
          "push": [MockFunction],
        }
      }
    >
      <Redirect
        to="/"
      >
        <Lifecycle
          onMount={[Function]}
          onUpdate={[Function]}
          to="/"
        />
      </Redirect>
    </HeroScreen>
  </Router>
</MemoryRouter>
`;

exports[`heroe screen tests Should render the heroe data 1`] = `
<MemoryRouter
  initialEntries={
    Array [
      "/hero/marvel-spider",
    ]
  }
>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "uawkkj",
            "pathname": "/hero/marvel-spider",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "uawkkj",
          "pathname": "/hero/marvel-spider",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Route
      component={[Function]}
      path="/hero/:heroId"
    >
      <HeroScreen
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "uawkkj",
                "pathname": "/hero/marvel-spider",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "uawkkj",
              "pathname": "/hero/marvel-spider",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
        location={
          Object {
            "hash": "",
            "key": "uawkkj",
            "pathname": "/hero/marvel-spider",
            "search": "",
            "state": undefined,
          }
        }
        match={
          Object {
            "isExact": true,
            "params": Object {
              "heroId": "marvel-spider",
            },
            "path": "/hero/:heroId",
            "url": "/hero/marvel-spider",
          }
        }
      >
        <div
          className="row m-5"
        >
          <div
            className="col-3"
          >
            <img
              alt="Spider Man"
              className="img-thumbnail"
              src="../heroes/marvel-spider.jpg"
            />
          </div>
          <div
            className="col-8"
          >
            <h3>
              Spider Man
            </h3>
            <ul
              className="list-group list-group-flush"
            >
              <li
                className="list-group-item"
              >
                 
                <b>
                   Alter ego: 
                </b>
                Peter Parker
              </li>
              <li
                className="list-group-item"
              >
                 
                <b>
                   Publisher: 
                </b>
                Marvel Comics
              </li>
              <li
                className="list-group-item"
              >
                 
                <b>
                   First appearance: 
                </b>
                Amazing Fantasy #15
              </li>
            </ul>
            <h5>
               Characters 
            </h5>
            <p>
              Peter Parker
            </p>
            <button
              className="btn btn-outline-info"
              onClick={[Function]}
              type="button"
            >
              Return
            </button>
          </div>
        </div>
      </HeroScreen>
    </Route>
  </Router>
</MemoryRouter>
`;
